{"version":3,"sources":["../../../src/api/theme/index.js"],"names":["require","Router","fs","controller","multer","storage","diskStorage","destination","req","file","cb","existsSync","body","name","mkdirSync","filename","ext","originalname","split","fieldname","upload","cpUpload","fields","maxCount","router","post","create","get","getAll","getByID","delete","removeByID","put","updateByID","module","exports"],"mappings":";;eAAiBA,QAAQ,SAAR,C;IAAVC,M,YAAAA,M;;AACP,IAAIC,KAAKF,QAAQ,IAAR,CAAT;AACA;;AAEA,IAAMG,aAAaH,QAAQ,oBAAR,CAAnB;AACA,IAAII,SAAUJ,QAAQ,QAAR,CAAd;AACA,IAAIK,UAAWD,OAAOE,WAAP,CAAmB;AACjCC,eAAa,qBAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACrC,QAAI,CAACR,GAAGS,UAAH,CAAc,sBAAsBH,IAAII,IAAJ,CAASC,IAA7C,CAAL,EAAwD;AACvDX,SAAGY,SAAH,CAAa,sBAAsBN,IAAII,IAAJ,CAASC,IAA5C;AACA;AACDH,OAAG,IAAH,EAAS,sBAAsBF,IAAII,IAAJ,CAASC,IAAxC;AACA,GANgC;AAOjCE,YAAU,kBAAUP,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAClC,QAAIM,MAAMP,KAAKQ,YAAL,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAV;AACAR,OAAG,IAAH,EAAYD,KAAKU,SAAjB,SAA8BH,GAA9B;AACA;AAVgC,CAAnB,CAAf;AAYA,IAAII,SAAShB,OAAO,EAAEC,gBAAF,EAAP,CAAb;AACA,IAAIgB,WAAWD,OAAOE,MAAP,CAAc,CAAC,EAAET,MAAM,MAAR,EAAgBU,UAAU,CAA1B,EAAD,EAAgC,EAAEV,MAAM,MAAR,EAAgBU,UAAU,CAA1B,EAAhC,CAAd,CAAf;;AAEA,IAAIC,SAAS,IAAIvB,MAAJ,EAAb;AACA;;;;;;;;;;AAUAuB,OAAOC,IAAP,CAAY,GAAZ,EAAgBJ,QAAhB,EAA0BlB,WAAWuB,MAArC;;AAEA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBxB,WAAWyB,MAA3B;;AAEA;;;;;;;;;AASAJ,OAAOG,GAAP,CAAW,YAAX,EAAyBxB,WAAW0B,OAApC;;AAEA;;;;;;;;;AASAL,OAAOM,MAAP,CAAc,YAAd,EAA4B3B,WAAW4B,UAAvC;;AAEA;;;;;;;;;AASAP,OAAOQ,GAAP,CAAW,YAAX,EAAyB7B,WAAW8B,UAApC;;AAEAC,OAAOC,OAAP,GAAiBX,MAAjB","file":"index.js","sourcesContent":["const {Router} = require('express');\nvar fs = require('fs');\n//const {authenticate} = require('./../../middleware/authenticate');\n\nconst controller = require('./theme.controller');\nvar multer  = require('multer');\nvar storage =  multer.diskStorage({\n\tdestination: function (req, file, cb) {\n\t\tif (!fs.existsSync('./uploads/themes/' + req.body.name)){\n\t\t\tfs.mkdirSync('./uploads/themes/' + req.body.name);\n\t\t}\n\t\tcb(null, './uploads/themes/' + req.body.name);\n\t},\n\tfilename: function (req, file, cb) {\n\t\tvar ext = file.originalname.split('.')[1];\n\t\tcb(null, `${file.fieldname}.${ext}`);\n\t}\n});\nvar upload = multer({ storage });\nvar cpUpload = upload.fields([{ name: 'bg-p', maxCount: 1 }, { name: 'bg-l', maxCount: 1 }]);\n\nvar router = new Router();\n/**\n * @api {post} /theme create\n * @apiName CreateTheme\n * @apiGroup Theme\n *\n * @apiParam {String} name .\n *\n * @apiSuccess {Object} - contain message and resource id.\n */\n\nrouter.post('/',cpUpload, controller.create);\n\n/**\n * @api {get} /theme all\n * @apiName GetAllTheme\n * @apiGroup Theme\n * @apiSuccess {Object} - contain items from resource.\n */\nrouter.get('/',\tcontroller.getAll);\n\n/**\n * @api {get} /theme/:id\tget\n * @apiName GetThemeById\n * @apiGroup Theme\n *\n * @apiParam {String} id .\n *\n * @apiSuccess {Object} - resource.\n */\nrouter.get('/:theme_id',\tcontroller.getByID);\n\n/**\n * @api {delete} /theme/:id\tdelete\n * @apiName RemoveThemeById\n * @apiGroup Theme\n *\n * @apiParam {String} id .\n *\n * @apiSuccess {Object} - contain message.\n */\nrouter.delete('/:theme_id',\tcontroller.removeByID);\n\n/**\n * @api {put} /theme/:id\tupdate\n * @apiName UpdateThemeById\n * @apiGroup Theme\n *\n * @apiParam {String} id .\n *\n * @apiSuccess {Object} - contain message.\n */\nrouter.put('/:theme_id', controller.updateByID);\n\nmodule.exports = router;"]}